---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {% raw %}{{ project_name }}{% endraw %}-web
  namespace: default
  labels:
    app: {% raw %}{{ project_name }}{% endraw %}
    component: web
    layer: application
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: {% raw %}{{ project_name }}{% endraw %}
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: {% raw %}{{ project_name }}{% endraw %}
        component: web
        layer: application
      name: {% raw %}{{ project_name }}{% endraw %}-web
    spec:
      containers:
        - name: {% raw %}{{ project_name }}{% endraw %}-web
          env:
            - name: PORT
              value: "8080"
            - name: PUMA_WORKERS
              value: "1"
            - name: PUMA_THREAD_MIN
              value: "5"
            - name: PUMA_THREAD_MAX
              value: "5"
            - name: RAILS_SERVE_STATIC_FILES
              value: 'true'
            - name: RAILS_LOG_TO_STDOUT
              value: 'true'
            - name: PUMA_BIND
              value: 'tcp://0.0.0.0:8080'
            - name: MALLOC_ARENA_MAX
              value: "2"
            - name: DATADOG_TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: {% raw %}{{ project_name }}{% endraw %}-environment
          image: {% raw %}{{ project_repo }}{% endraw %}:production
          imagePullPolicy: Always
          ports:
            - name: {% raw %}{{ project_name }}{% endraw %}-http
              containerPort: 8080
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: 1Gi
          readinessProbe:
            httpGet:
              port: {% raw %}{{ project_name }}{% endraw %}-http
              path: /health/ping
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: tier
                  operator: In
                  values:
                    - foreground

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {% raw %}{{ project_name }}{% endraw %}-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {% raw %}{{ project_name }}{% endraw %}-web
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {% raw %}{{ project_name }}{% endraw %}
    component: web
    layer: application
  name: {% raw %}{{ project_name }}{% endraw %}-web-internal
  namespace: default
spec:
  ports:
    - port: 8080
      protocol: TCP
      name: http
      targetPort: 8080
  selector:
    app: {% raw %}{{ project_name }}{% endraw %}
    layer: application
    component: web
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {% raw %}{{ project_name }}{% endraw %}
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "{% raw %}{{ cloudflareIpSourceRanges|join(',') }}{% endraw %}"
spec:
  rules:
    - host: {% raw %}{{ project_name }}{% endraw %}.artsy.net
      http:
        paths:
          - path: /
            backend:
              serviceName: {% raw %}{{ project_name }}{% endraw %}-web-internal
              servicePort: http
