---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ project_name }}-web
  namespace: default
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ project_name }}
        component: web
        layer: application
      name: {{ project_name }}-web
    spec:
      containers:
        - name: {{ project_name }}-web
          env:
            - name: RAILS_ENV
              value: production
            - name: RAILS_SERVE_STATIC_FILES
              value: 'true'
            - name: RAILS_LOG_TO_STDOUT
              value: 'true'
            - name: TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: {{ project_name }}-environment
          image: {{ project_repo }}:staging
          imagePullPolicy: Always
          name: {{ project_name }}-web
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              memory: 500Mi
          readinessProbe:
            httpGet:
              port: 8080
              path: /health/ping
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: tier
                  operator: In
                  values:
                    - foreground
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ project_name }}
    component: web
    layer: application
  name: {{ project_name }}-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
spec:
  ports:
    - port: 443
      protocol: TCP
      name: https
      targetPort: 8080
    - port: 80
      protocol: TCP
      name: http
      targetPort: 8080
  selector:
    app: {{ project_name }}
    layer: application
    component: web
  sessionAffinity: None
  type: LoadBalancer

